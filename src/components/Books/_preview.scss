#preview {
  // Cover the whole screen
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  // Disable click events since the preview is covering the whole screen
  pointer-events: none;

  // Make sure the preview is positioned above everything else
  // (including the navbar with z-index: 100)
  z-index: 101;

  &.show {
    // Center children both horizontally and vertically
    display: flex;
    align-items: center;
    justify-content: center;
  }
  &:not(.show) {
    display: none;
  }
  
  // Dim the background when the preview is visible
  background-color: rgba(0, 0, 0, 0.5);
  
  .book {
    // Unsetting the position will allow the book to be centered by flex
    position: unset;

    // Increase the size of the book for the preview
    // Store the dimensions as variables for use by the child elements
    --preview-scale: 1.5;
    --preview-height: calc(var(--preview-scale) * var(--height));
    --preview-width: calc(var(--preview-scale) * var(--width));
    --preview-depth: calc(var(--preview-scale) * var(--depth));
    height: var(--preview-height);
    width: var(--preview-width);
    font-size: calc(var(--preview-scale) * var(--font-size));
    --preview-blurb-size: calc(var(--preview-scale) * var(--blurb-size));

    // Set the perspective for the 3D effect
    @include perspective(2000px);
    @include perspective-origin(-600px -250px);

    // Enable click events for the book and its child elements
    pointer-events: all;
    // Change the cursor back from grab for drag and drop
    // (although the book can still be dragged and dropped)
    cursor: default;

    // Remove the ghost effect when previewing unavailable books
    &.unavailable {
      .spine, .front, .back, .top, .bottom {
        opacity: unset;
        filter: unset;
      }
    }

    // Show/hide different faces based on which way the book is facing
    &.flipped {
      // Back cover facing the user
      .spine, .front, #inside { display: none; }
      .edge { display: block; }
    }
    &:not(.flipped) {
      // Front cover facing the user
      .edge, .back { display: none; }
    }

    &.open {
      .front {
        @include transform(scaleX(0.5) rotateY(-165deg));
      }

      #inside {
        // Angle the inside of the front cover slightly for visual effect
        @include transform(scaleX(1) rotateY(15deg));

        // Start to close the front cover when hovering over to indicate
        // that clicking on the inside of the front cover will close the book
        &:hover {
          @include transform(scaleX(0.95) rotateY(20deg));
        }
      }
    }
    &:not(.open) {
      .front {
        @include transform(scaleX(1));

        // Start to open the front cover when hovering over to indicate
        // that clicking on the front cover will open the book
        &:hover {
          @include transform(scaleX(0.9) rotateY(-10deg));
        }
      }

      #inside {
        // Angle the inside of the front cover slightly for visual effect
        @include transform(scaleX(0.5) rotateY(165deg));
      }
    }
  
    .front {
      height: var(--preview-height);
      width: var(--preview-width);
      left: 0;
      // Required for the front cover opening/closing effect
      backface-visibility: hidden;
      filter: unset;
      // Change the cursor to indicate that there is an action
      cursor: pointer;
      &.hidden { display: none; }

      @include transform-origin(left);
      //@include transform(unset);
      @include transition(ease-in-out 0.5s);
    }
  
    #inside {
      position: absolute;
      height: var(--preview-height);
      width: var(--preview-width);
      top: 0;
      right: 100%;
      background-color: white;
      // Required for the front cover opening/closing effect
      backface-visibility: hidden;
      // Change the cursor to indicate that there is an action
      cursor: pointer;

      // Angle the inside of the front cover slightly for visual effect
      @include transform-origin(right);
      //@include transform(rotateY(15deg));
      @include transition(ease-in-out 0.5s);
    }
    
    .spine {
      height: var(--preview-height);
      width: var(--preview-depth);
      right: 100%;
      @include transform-origin(right);
      @include transform(rotateY(-90deg));
      writing-mode: vertical-rl;
      text-orientation: sideways;
      font-size: inherit;
      border-top: none;
      border-bottom: none;
    }
  
    .edge {
      height: var(--preview-height);
      width: var(--preview-depth);
      top: -1px;
      right: 100%;
      background-color: var(--paper-color);
      border-top: 1px solid black;
      @include transform-origin(right);
      @include transform(rotateY(-90deg));
      filter: grayscale(25%);
    }
  
    .back {
      height: var(--preview-height);
      width: var(--preview-width);
      left: 0;
      font-size: var(--preview-blurb-size);
      @include transform(unset);
      filter: unset;
      cursor: auto;
      &.hidden { display: none; }
    }
  
    .top {
      height: var(--preview-depth);
      width: var(--preview-width);
      bottom: 100%;
      outline: none;
      @include transform-origin(bottom);
      @include transform(rotateX(90deg));
    }
  
    .bottom {
      height: var(--preview-depth);
      width: var(--preview-width);
      top: 100%;
      @include transform-origin(top);
      @include transform(rotateX(-90deg));
    }

    .page {
      position: absolute;
      top: -1px;
      left: -1px;
      height: var(--preview-height);
      width: var(--preview-width);
      padding: 5%;
      color: black;
      background-color: var(--paper-color);
      border-top: 1px solid black;
      border-left: 1px solid black;
      filter: grayscale(25%);

      // Change the cursor to auto to switch between the default cursor and the text cursor
      cursor: auto;

      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-align: center;
      text-transform: none;
      font-weight: normal;

      h1 {
        font-size: x-large;
      }

      h2 {
        font-size: large;
        margin-bottom: 15px;
      }

      p {
        margin-top: 15px;
        font-size: var(--preview-blurb-size);
      }
    }
  }

  #flip_book {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 20px;
    margin-right: -60px;
    padding: 5px;
    outline: none;
    border: 3px solid black;
    border-radius: 100%;
    background-color: var(--primary-red);

    // Enable click events
    pointer-events: all;
    // Disable click events for child elements
    * { pointer-events: none; }
    // Change the cursor to indicate that there is an action
    cursor: pointer;

    // Required to prevent the arrows from rotating back when the mouseover stops
    @include transition(all 0s);

    // Rotate the arrows by 180 degrees when hovering over the button
    &:hover {
      background-color: lighten(#92140C, 10%);
      @include transform(rotate(180deg));

      // Required to prevent the arrows from rotating back when the mouseover stops
      @include transition(all 0.5s);
    }
  }
}

@media screen and (max-width: 600px) {
  #preview {
    .book {
      // Reduce the size of the books being previewed to fit on the screen
      --preview-scale: 1;
    }
  }
}