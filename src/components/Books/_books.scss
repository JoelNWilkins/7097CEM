.book {
  bottom: 0;
  font-size: var(--font-size);
  --paper-color: #EDE79F;
  --border-color: var(--background-color);
  transform-style: preserve-3d;

  // Change the cursor to indicate the books can be dragged and dropped
  cursor: grab;

  // Slide the books to the back of the shelves to start
  @include transform(translateZ(calc(var(--width) - 300px)));
  // Wait for a little bit before sliding the books out over half a second
  @include transition(transform 0.5s 0.1s);
  // Slide the books out from the shelves when hovering over them
  &:hover {
    @include transform(translateZ(150px));
  }

  &.hide { display: none; }
  &:not(.hide) { display: block; }

  // Make unavailable books look ghostly (greyscale and translucent)
  &.unavailable {
    .spine, .front, .back, .top, .bottom {
      opacity: 0.5;
      filter: grayscale(75%);
    }
  }

  .spine, .front, .back, .top, .bottom, .edge {
    position: absolute;
    transform-style: preserve-3d;
    font-family: inherit;
    z-index: 0;
  }

  .spine {
    height: 100%;
    width: 100%;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid var(--border-color);
    background-color: var(--background-color);
    z-index: 1;
  }

  .front, .back {
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-color: var(--background-color);
  }

  .back {
    padding: 5%;
    font-size: xx-small;

    p {
      margin-bottom: 10px;
    }
  }

  div:where(.front, .back) {
    filter: brightness(80%);
  }

  .top, .bottom {
    outline: 2px solid var(--background-color);
    outline-offset: -2px;
    background-color: var(--paper-color);
  }

  .edge {
    display: none;
    background-color: var(--paper-color);
  }

  .page {
    display: none;
  }
}

section .book {
  position: absolute;
  height: var(--height);
  width: var(--depth);

  .spine {
    padding-right: 1px;
    writing-mode: vertical-rl;
    text-orientation: sideways;
    border-top: none;
    border-bottom: none;
  }

  .front {
    width: var(--width);
    height: 100%;
    left: 100%;
    transform-origin: left;
    @include transform(rotateY(90deg));
  }

  .back {
    width: var(--width);
    height: 100%;
    right: 100%;
    transform-origin: right;
    @include transform(rotateY(-90deg));
  }

  .top {
    width: 100%;
    height: var(--width);
    bottom: 100%;
    transform-origin: bottom;
    @include transform(rotateX(90deg));
  }

  .bottom {
    width: 100%;
    height: var(--width);
    top: 100%;
    transform-origin: top;
    @include transform(rotateX(-90deg));
  }
}

section .book:not(.hide) + .book.leaning {
  // Rotate around the bottom left corner to make the calculations neater
  @include transform-origin(bottom left);
  // Lean the book at a 15 degree angle with the top left corner just touching the book to the left
  @include transform(translateZ(calc(var(--width) - 300px)) translateX(calc(0.26 * var(--height))) rotateZ(-15deg));

  // Rotate leaning books upright when sliding them out from the shelves
  &:hover {
    @include transform(translateX(calc(0.1 * var(--height))) translateZ(150px));
  }
}

aside .book {
  position: relative;
  height: var(--depth);
  width: var(--height);

  .spine {
    height: var(--height);
    width: var(--depth);
    padding-right: 1px;
    border-top: none;
    border-bottom: none;
    writing-mode: vertical-rl;
    text-orientation: sideways;
    transform-origin: top left;
    @include transform(rotateZ(-90deg) translateX(calc(var(--depth) * -1)));
  }

  .front {
    height: var(--height);
    width: var(--width);
    transform-origin: top left;
    @include transform(rotateX(90deg) rotateZ(-90deg));
  }
  
  .back {
    height: var(--height);
    width: var(--width);
    top: 100%;
    transform-origin: top left;
    @include transform(scale(-1) rotateX(90deg) rotateZ(90deg) translateX(calc(var(--width) * -1)));
  }

  .top {
    width: var(--width);
    height: 100%;
    right: 100%;
    transform-origin: right;
    @include transform(rotateY(-90deg));
  }

  .bottom {
    width: var(--width);
    height: 100%;
    left: 100%;
    transform-origin: left;
    @include transform(rotateY(90deg));
  }
}